@model IEnumerable<EBooks.Models.Livro>

@{
    ViewBag.Title = "TodosLivros";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<body>
    <div class="form-group">

        <div class="col-md-12">
            <h2 class="text-center">Todos os Livros</h2>

            <p>
                @Html.ActionLink("Novo Livro", "NovoLivro", new { }, new { @class = "btn btn-primary" })
            </p>

            @if (!string.IsNullOrWhiteSpace(TempData["erro"]?.ToString()))
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["erro"]
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(TempData["msg"]?.ToString()))
            {
                <div class="alert alert-success" role="alert">
                    @TempData["msg"]
                </div>
            }

            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <tr>
                        <th>

                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Nome)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Preco)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Quantidade)
                        </th>
                        <th></th>
                        <th></th>
                    </tr>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div class="img-rounded">
                                        @if (item.Imagem != null)
                                        {
                                            <img src="@string.Concat("data:image/png;base64,", Convert.ToBase64String(item.Imagem, 0, item.Imagem.Length))" alt="Livro" width="100" height="100" />
                                        }
                                    </div>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Nome)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Preco)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantidade)
                                </td>
                                <td>
                                    @using (Html.BeginForm("EditarLivro", "Livro", FormMethod.Get))
                                    {
                                        <input type="hidden" name="id" id="id" value="@item.LivroId" />
                                        <button type="submit" class="btn btn-primary btn-xs">
                                            <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                            Editar
                                        </button>
                                    }

                                    @*@Html.ActionLink("Editar", "EditarLivro", new { id = item.LivroId }, new { @class = "glyphicon glyphicon-edit", style = "font-size:20px;" })*@
                                </td>
                                <td>
                                    <button onclick="livroId.value = @item.LivroId" type="button" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#myModal">
                                        <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>
                                        Excluir
                                    </button>
                                    @*@Html.ActionLink("Deletar", "Delete", new { id = item.LivroId }, new { @class = "glyphicon glyphicon-remove-sign", style = "font-size:20px;" })*@
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>
    </div>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Confirmação</h4>
                </div>
                <div class="modal-body">
                    Deseja realmente excluir o livro ?
                </div>
                <div class="modal-footer">
                    @using (Html.BeginForm("ExcluirLivro", "Livro"))
                    {
                        <input type="hidden" name="id" id="livroId" />
                        <button type="button" class="btn btn-default" data-dismiss="modal">Não</button>
                        <button type="submit" class="btn btn-danger">Sim</button>
                    }
                </div>
            </div>
        </div>
    </div>

</body>